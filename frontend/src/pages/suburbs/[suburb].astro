---
import Layout from '../../layouts/Layout.astro';
import ContactForm from '../../components/ContactForm.astro';
import ServiceQuoteSection from '../../components/ServiceQuoteSection.astro';
import type {Sa as SubArea} from "../../types/payload-types"
import { Picture } from 'astro:assets';
import CmsBlockMap from "../../components/CmsBlockMap/index.astro"

export async function getStaticPaths() {
  const paths:{docs:{slug:string,id:string}[]} = await fetch(`${import.meta.env.PAYLOAD_CMS_URL}/api/sa?depth=1&draft=false&limit=100&select[slug]=true`).then(data=>data.json())

  return paths.docs.map(({ slug, id }) => ({
    params: { suburb: slug },
    props: { id }
  }));
}

const { id } = Astro.props;
  const data:SubArea = await fetch(`${import.meta.env.PAYLOAD_CMS_URL}/api/sa/${id}?depth=1&draft=false&locale=undefined`).then(data=>data.json())
  const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/images/*.{jpeg,jpg,png,gif,webp,avif}');
  if(typeof data.heroSection.backgroundImage !== "object") throw Error(`Subarea:${data.name} hero section backgroundImage not uploaded yet to cms`)
---

<Layout
  title={data?.meta?.title}
  description={data?.meta?.description}
>
  <!-- Hero Section -->
  <section class="relative min-h-[60vh] flex items-center">
    <div class="absolute inset-0 z-0 size-full">
    <Picture
    src={images[`/src/assets/images/${data.heroSection.backgroundImage.filename}`]()}
      alt={data.heroSection.backgroundImage.alt}
      class="w-full h-full object-cover"
    />
    </div>
    <div class="absolute z-10 bg-black/30 size-full"></div>
    <div class="container mx-auto px-4 relative z-10">
      <div class="flex flex-col items-start">
        <div class="flex items-center text-white font-medium mb-4">
          <a href="/" class="hover:text-white transition-colors">Home</a>
          <span class="mx-2">›</span>
          <a href="/service-areas" class="hover:text-white transition-colors">Service Areas</a>
          <span class="mx-2">›</span>
          <span class="text-white">{data.name}</span>
        </div>
        <h1 class="text-5xl font-bold text-white mb-4">{data.heroSection.title}</h1>
        <p class="text-xl text-white/90 max-w-2xl">{data.heroSection.description}</p>
      </div>
    </div>
  </section>
  {data.sections.map((section)=> <CmsBlockMap block={section}/>)}
</Layout>
